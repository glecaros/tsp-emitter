package modeltest

import "encoding/json"

// This file is generated by the typespec compiler. Do not edit.
type RectangleDimensions struct {
	Width  float64
	Height float64
}

func (m *RectangleDimensions) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	if v, ok := rawMsg["width"]; ok {
		if err := json.Unmarshal(v, &m.Width); err != nil {
			return err
		}
	}
	if v, ok := rawMsg["height"]; ok {
		if err := json.Unmarshal(v, &m.Height); err != nil {
			return err
		}
	}
	return nil
}

func (m RectangleDimensions) MarshalJSON() ([]byte, error) {
	obj := map[string]interface{}{
		"width":  m.Width,
		"height": m.Height,
	}

	return json.Marshal(obj)
}

type Rectangle struct {
	Dimensions RectangleDimensions
}

func (m *Rectangle) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	if v, ok := rawMsg["dimensions"]; ok {
		if err := json.Unmarshal(v, &m.Dimensions); err != nil {
			return err
		}
	}
	return nil
}

func (m Rectangle) MarshalJSON() ([]byte, error) {
	obj := map[string]interface{}{
		"dimensions": m.Dimensions,
	}

	return json.Marshal(obj)
}
