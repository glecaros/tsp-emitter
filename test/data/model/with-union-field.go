package modeltest

import "encoding/json"

// This file is generated by the typespec compiler. Do not edit.
type Material string

const (
	MaterialGlass Material = "glass"
	MaterialTin   Material = "tin"
)

func (f *Material) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	*f = Material(v)
	return nil
}

func (f Material) MarshalJSON() ([]byte, error) {
	return json.Marshal(f)
}

type Cup struct {
	Material Material
}

func (m *Cup) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	if v, ok := rawMsg["material"]; ok {
		if err := json.Unmarshal(v, &m.Material); err != nil {
			return err
		}
	}
	return nil
}

func (m Cup) MarshalJSON() ([]byte, error) {
	obj := map[string]interface{}{
		"material": m.Material,
	}

	return json.Marshal(obj)
}
