package modeltest

import "encoding/json"

// This file is generated by the typespec compiler. Do not edit.

type HasNullableValueUnionFieldsSingleValue string

const (
	HasNullableValueUnionFieldsSingleValueFirst HasNullableValueUnionFieldsSingleValue = "first"
)

func (f *HasNullableValueUnionFieldsSingleValue) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	*f = HasNullableValueUnionFieldsSingleValue(v)
	return nil
}

func (f HasNullableValueUnionFieldsSingleValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(f)
}

type HasNullableValueUnionFieldsMultipleValues string

const (
	HasNullableValueUnionFieldsMultipleValuesOne HasNullableValueUnionFieldsMultipleValues = "one"
	HasNullableValueUnionFieldsMultipleValuesTwo HasNullableValueUnionFieldsMultipleValues = "two"
)

func (f *HasNullableValueUnionFieldsMultipleValues) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	*f = HasNullableValueUnionFieldsMultipleValues(v)
	return nil
}

func (f HasNullableValueUnionFieldsMultipleValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(f)
}

type HasNullableValueUnionFields struct {
	SingleValue    Nullable[HasNullableValueUnionFieldsSingleValue]
	MultipleValues Nullable[HasNullableValueUnionFieldsMultipleValues]
}

func (m *HasNullableValueUnionFields) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	if v, ok := rawMsg["singleValue"]; ok {
		if err := json.Unmarshal(v, &m.SingleValue); err != nil {
			return err
		}
	}
	if v, ok := rawMsg["multipleValues"]; ok {
		if err := json.Unmarshal(v, &m.MultipleValues); err != nil {
			return err
		}
	}
	return nil
}

func (m HasNullableValueUnionFields) MarshalJSON() ([]byte, error) {
	obj := map[string]interface{}{
		"singleValue":    m.SingleValue,
		"multipleValues": m.MultipleValues,
	}

	return json.Marshal(obj)
}
