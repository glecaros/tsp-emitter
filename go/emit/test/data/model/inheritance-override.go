package modeltest

import "encoding/json"

// This file is generated by the typespec compiler. Do not edit.
type Animal struct {
	Genus string
}

func (m *Animal) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	if v, ok := rawMsg["genus"]; ok {
		if err := json.Unmarshal(v, &m.Genus); err != nil {
			return err
		}
	}
	return nil
}

func (m Animal) MarshalJSON() ([]byte, error) {
	obj := map[string]interface{}{
		"genus": m.Genus,
	}

	return json.Marshal(obj)
}

type MonitoDelMonte struct {
	Animal
}

func (m MonitoDelMonte) Genus() string {
	return "domiciops"
}

func (m *MonitoDelMonte) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	return nil
}

func (m MonitoDelMonte) MarshalJSON() ([]byte, error) {
	obj := map[string]interface{}{
		"genus": "domiciops",
	}

	return json.Marshal(obj)
}
