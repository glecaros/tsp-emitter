package modeltest

import "encoding/json"

// This file is generated by the typespec compiler. Do not edit.
type GlassMaterial string

const (
	GlassMaterialPewter  GlassMaterial = "pewter"
	GlassMaterialCeramic GlassMaterial = "ceramic"
)

func (f *GlassMaterial) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	*f = GlassMaterial(v)
	return nil
}

func (f GlassMaterial) MarshalJSON() ([]byte, error) {
	return json.Marshal(f)
}

type Glass struct {
	Material GlassMaterial
}

func (m *Glass) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	if v, ok := rawMsg["material"]; ok {
		if err := json.Unmarshal(v, &m.Material); err != nil {
			return err
		}
	}
	return nil
}

func (m Glass) MarshalJSON() ([]byte, error) {
	obj := map[string]interface{}{
		"material": m.Material,
	}

	return json.Marshal(obj)
}
