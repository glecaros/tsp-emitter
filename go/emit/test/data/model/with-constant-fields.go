package modeltest

import "encoding/json"

// This file is generated by the typespec compiler. Do not edit.
type SmallDog struct {
	Name    string
	Age     float64
	IsSmall bool
	Size    string
}

func (m *SmallDog) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	if v, ok := rawMsg["name"]; ok {
		if err := json.Unmarshal(v, &m.Name); err != nil {
			return err
		}
	}
	if v, ok := rawMsg["age"]; ok {
		if err := json.Unmarshal(v, &m.Age); err != nil {
			return err
		}
	}
	if v, ok := rawMsg["isSmall"]; ok {
		if err := json.Unmarshal(v, &m.IsSmall); err != nil {
			return err
		}
	}
	if v, ok := rawMsg["size"]; ok {
		if err := json.Unmarshal(v, &m.Size); err != nil {
			return err
		}
	}
	return nil
}

func (m SmallDog) MarshalJSON() ([]byte, error) {
	obj := map[string]interface{}{
		"name":    m.Name,
		"age":     m.Age,
		"isSmall": true,
		"size":    "small",
	}

	return json.Marshal(obj)
}
