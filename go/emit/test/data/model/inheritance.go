package modeltest

import "encoding/json"

// This file is generated by the typespec compiler. Do not edit.
type Person struct {
	Name string
}

func (m *Person) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	if v, ok := rawMsg["name"]; ok {
		if err := json.Unmarshal(v, &m.Name); err != nil {
			return err
		}
	}
	return nil
}

func (m Person) MarshalJSON() ([]byte, error) {
	obj := map[string]interface{}{
		"name": m.Name,
	}

	return json.Marshal(obj)
}

type Employee struct {
	Person
	Salary int64
}

func (m *Employee) UnmarshalJSON(data []byte) error {
	var rawMsg map[string]json.RawMessage
	if err := json.Unmarshal(data, &rawMsg); err != nil {
		return err
	}
	if v, ok := rawMsg["name"]; ok {
		if err := json.Unmarshal(v, &m.Name); err != nil {
			return err
		}
	}
	if v, ok := rawMsg["salary"]; ok {
		if err := json.Unmarshal(v, &m.Salary); err != nil {
			return err
		}
	}
	return nil
}

func (m Employee) MarshalJSON() ([]byte, error) {
	obj := map[string]interface{}{
		"name":   m.Name,
		"salary": m.Salary,
	}

	return json.Marshal(obj)
}
